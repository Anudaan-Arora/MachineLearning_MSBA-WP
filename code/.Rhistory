dev.off()
## COSTS ##################################
## costs
# legal & marketing & initial real estate expenses, ongoing real estate expenses
realestate_sample = 12*c(34198,26989,21222,25837,26536,30377,23400,28872,31048,17270)
re_mu = mean(realestate_sample)
re_sd = sd(realestate_sample)
allcost = do(1000)*{
realestate = rnorm(10,mean=re_mu,re_sd)
realestate[1] = realestate[1] + rnorm(1,mean=500000,sd=50000) # fixed cost to build out location
legal = rnorm(10,mean=60000,sd=5000)
marketing = rnorm(10,mean=20000,sd=5000)
compute = rnorm(10,mean=60000,sd=10000)
compute[c(1,6)] = compute[c(1,6)] + rnorm(2,mean=100000,sd=5000)
comp_operators = rep(500000,10)
comp_faculty = rep(50000*12,10)
comp_staff = rep(100000,10)
cost = realestate + legal + marketing + compute + comp_operators + comp_faculty + comp_staff
# time uncertainty
cost_baseline = mean(cost)
noise = cost_baseline/30
time_noise = c()
for(ii in 1:timehorizon){
time_noise = c(time_noise,rnorm(1,0,sd=sqrt(ii)*noise))
}
# time_noise=0
cost = cost + time_noise
costcum = cumsum(cost)
list(cost=cost,costcum=costcum)
}
costup = t(apply(matrix(unlist(allcost$costcum),ncol=timehorizon,byrow=TRUE),2,quantile,c(0.025,0.5,0.975)))
costup = costup/1e6
costup = cbind(factor(1:timehorizon),as.data.frame(costup))
colnames(costup) = c("Year","","Costs","")
pdf("texdoc/cumcost.pdf",height,width)
ggplot(costup,aes(x=Year,y=Costs, group=1)) +
xlab("Year") + ylab("Cumulative costs (millions)") +
geom_ribbon(aes(ymin = costup[,2], ymax = costup[,4]), fill = "pink") +
geom_point(color = "black", size = .5) +
scale_y_continuous(labels=scales::dollar_format()) +
geom_line(aes(y = costup$Costs)) +
geom_text(size=2.91,hjust = 0, nudge_x = -.45,vjust = 0, nudge_y = 0.1,aes(label = dollar(Costs)))+ geom_hline(yintercept=0,linetype=2,color="darkred")
dev.off()
# Costs year over year
costYoY = matrix(unlist(allcost$cost),ncol=timehorizon,byrow=TRUE)
costYoY = t(apply(costYoY,2,quantile,c(0.025,0.5,0.975)))
costYoY = costYoY/1e6
costYoY = cbind(factor(1:timehorizon),as.data.frame(costYoY))
colnames(costYoY) = c("Year","","Costs","")
pdf("texdoc/costYoY.pdf",height,width=width_small)
ggplot(costYoY,aes(x=Year,y=Costs, group=1)) +
xlab("Year") + ylab("Costs YoY (millions)") +
geom_ribbon(aes(ymin = costYoY[,2], ymax = costYoY[,4]), fill = "pink",alpha=0.75) +
geom_point(color = "black", size = .5) +
scale_y_continuous(labels=scales::dollar_format()) +
geom_line(aes(y = costYoY$Costs)) +
geom_text(size=2.91,hjust = 0, nudge_x = -.45,vjust = 0, nudge_y = 0.1,aes(label = dollar(Costs))) + geom_hline(yintercept=0,linetype=2,color="darkred") + ylim(0,3)
dev.off()
## PROFITS ##################################
## Profit/loss trajectory
#first, combine the realizations of both variables
profit_byyear_all = matrix(unlist(allrev$revenue),ncol=timehorizon,byrow=TRUE) - matrix(unlist(allcost$cost),ncol=timehorizon,byrow=TRUE)
cumprofit_byyear_all = t(apply(profit_byyear_all,1,cumsum))
#second, find quantiles
profit_byyear = t(apply(profit_byyear_all,2,quantile,c(0.025,0.5,0.975)))
profit_byyear = profit_byyear/1e6
profit_byyear = cbind(factor(1:timehorizon),as.data.frame(profit_byyear))
colnames(profit_byyear) = c("Year","","Profit","")
#second, find quantiles (cum profit)
cumprofit_byyear = t(apply(cumprofit_byyear_all,2,quantile,c(0.025,0.5,0.975)))
cumprofit_byyear = cumprofit_byyear/1e6
cumprofit_byyear = cbind(factor(1:timehorizon),as.data.frame(cumprofit_byyear))
colnames(cumprofit_byyear) = c("Year","","Cumulative profit","")
# plot
pdf("texdoc/profitYoY.pdf",height=height,width=width)
ggplot(profit_byyear,aes(x=Year,y=`Profit`, group=1)) +
xlab("Year") + ylab("Profit YoY (millions)") +
geom_ribbon(aes(ymin = profit_byyear[,2], ymax = profit_byyear[,4]), fill = "lightgreen") +
geom_point(color = "black", size = .5) +
scale_y_continuous(labels=scales::dollar_format()) +
geom_line(aes(y = profit_byyear$`Profit`)) +
geom_text(size=2.91,hjust = 0, nudge_x = -.45,vjust = 0, nudge_y = 0.1,aes(label = dollar(`Profit`)))+ geom_hline(yintercept=0,linetype=2,color="darkred")
dev.off()
# plot (cum)
pdf("texdoc/cumprofit.pdf",height=height,width=width)
ggplot(cumprofit_byyear,aes(x=Year,y=`Cumulative profit`, group=1)) +
xlab("Year") + ylab("Cumulative profit (millions)") +
geom_ribbon(aes(ymin = cumprofit_byyear[,2], ymax = cumprofit_byyear[,4]), fill = "lightblue",alpha=0.8) +
geom_point(color = "black", size = .5) +
scale_y_continuous(labels=scales::dollar_format()) +
geom_line(aes(y = cumprofit_byyear$`Cumulative profit`)) +
geom_text(size=2.91,hjust = 0, nudge_x = -.45,vjust = 0, nudge_y = 0.1,aes(label = dollar(`Cumulative profit`)))+ geom_hline(yintercept=0,linetype=2,color="darkred")
dev.off()
source("~/Dropbox/AIEcon/DMF/TheLab_projections.R")
ggplot(revup,aes(x=Year,y=Revenue, group=1)) +
xlab("Year") + ylab("Cumulative revenue (millions)") +
geom_ribbon(aes(ymin = revup[,2], ymax = revup[,4]), fill = "grey75",alpha=0.75) +
geom_point(color = "black", size = .5) +
scale_y_continuous(labels=scales::dollar_format()) +
geom_line(aes(y = revup$Revenue)) +
geom_text(size=3.01,hjust = 0, nudge_x = -.45,vjust = 0, nudge_y = 0.1,aes(label = dollar(Revenue)))
# The Lab projections
library(mosaic)
library(tidyverse)
library(ggplot2)
library(scales)
timehorizon = 10
revenue = rep(NA,timehorizon)
cost = rep(NA,timehorizon)
# plot dimensions (global)
height = 4.5
width_small = 4.5
width = 7.5
## REVENUE ##################################
# revenue side first
# first 2 years, no tuition
allrev = do(1000)*{
tuition = c(0,0,rep(50000,8))
numstudents = rbinom(1,67,0.75)
revenue = tuition*numstudents
revenuecum = cumsum(revenue)
list(revenue=revenue,revenuecum=revenuecum)
}
revup = t(apply(matrix(unlist(allrev$revenuecum),ncol=timehorizon,byrow=TRUE),2,quantile,c(0.025,0.5,0.975)))
revup = revup/1e6
revup = cbind(factor(1:timehorizon),as.data.frame(revup))
colnames(revup) = c("Year","","Revenue","")
pdf("texdoc/cumrev.pdf",height,width)
ggplot(revup,aes(x=Year,y=Revenue, group=1)) +
xlab("Year") + ylab("Cumulative revenue (millions)") +
geom_ribbon(aes(ymin = revup[,2], ymax = revup[,4]), fill = "grey75",alpha=0.75) +
geom_point(color = "black", size = .5) +
scale_y_continuous(labels=scales::dollar_format()) +
geom_line(aes(y = revup$Revenue)) +
geom_text(size=3.01,hjust = 0, nudge_x = -.45,vjust = 0, nudge_y = 0.1,aes(label = dollar(Revenue)))
dev.off()
# Revenue year over year
revYoY = matrix(unlist(allrev$revenue),ncol=timehorizon,byrow=TRUE)
revYoY = t(apply(revYoY,2,quantile,c(0.025,0.5,0.975)))
revYoY = revYoY/1e6
revYoY = cbind(factor(1:timehorizon),as.data.frame(revYoY))
colnames(revYoY) = c("Year","","Revenue","")
pdf("texdoc/revYoY.pdf",height,width=width_small)
ggplot(revYoY,aes(x=Year,y=Revenue, group=1)) +
xlab("Year") + ylab("Revenue YoY (millions)") +
geom_ribbon(aes(ymin = revYoY[,2], ymax = revYoY[,4]), fill = "grey75",alpha=0.75) +
geom_point(color = "black", size = .5) +
scale_y_continuous(labels=scales::dollar_format()) +
geom_line(aes(y = revYoY$Revenue)) +
geom_text(size=3.01,hjust = 0, nudge_x = -.45,vjust = 0, nudge_y = 0.1,aes(label = dollar(Revenue))) + geom_hline(yintercept=0,linetype=2,color="darkred") + ylim(0,3)
dev.off()
## COSTS ##################################
## costs
# legal & marketing & initial real estate expenses, ongoing real estate expenses
realestate_sample = 12*c(34198,26989,21222,25837,26536,30377,23400,28872,31048,17270)
re_mu = mean(realestate_sample)
re_sd = sd(realestate_sample)
allcost = do(1000)*{
realestate = rnorm(10,mean=re_mu,re_sd)
realestate[1] = realestate[1] + rnorm(1,mean=500000,sd=50000) # fixed cost to build out location
legal = rnorm(10,mean=60000,sd=5000)
marketing = rnorm(10,mean=20000,sd=5000)
compute = rnorm(10,mean=60000,sd=10000)
compute[c(1,6)] = compute[c(1,6)] + rnorm(2,mean=100000,sd=5000)
comp_operators = rep(500000,10)
comp_faculty = rep(50000*12,10)
comp_staff = rep(100000,10)
cost = realestate + legal + marketing + compute + comp_operators + comp_faculty + comp_staff
# time uncertainty
cost_baseline = mean(cost)
noise = cost_baseline/30
time_noise = c()
for(ii in 1:timehorizon){
time_noise = c(time_noise,rnorm(1,0,sd=sqrt(ii)*noise))
}
# time_noise=0
cost = cost + time_noise
costcum = cumsum(cost)
list(cost=cost,costcum=costcum)
}
costup = t(apply(matrix(unlist(allcost$costcum),ncol=timehorizon,byrow=TRUE),2,quantile,c(0.025,0.5,0.975)))
costup = costup/1e6
costup = cbind(factor(1:timehorizon),as.data.frame(costup))
colnames(costup) = c("Year","","Costs","")
pdf("texdoc/cumcost.pdf",height,width)
ggplot(costup,aes(x=Year,y=Costs, group=1)) +
xlab("Year") + ylab("Cumulative costs (millions)") +
geom_ribbon(aes(ymin = costup[,2], ymax = costup[,4]), fill = "pink") +
geom_point(color = "black", size = .5) +
scale_y_continuous(labels=scales::dollar_format()) +
geom_line(aes(y = costup$Costs)) +
geom_text(size=3.01,hjust = 0, nudge_x = -.45,vjust = 0, nudge_y = 0.1,aes(label = dollar(Costs)))+ geom_hline(yintercept=0,linetype=2,color="darkred")
dev.off()
# Costs year over year
costYoY = matrix(unlist(allcost$cost),ncol=timehorizon,byrow=TRUE)
costYoY = t(apply(costYoY,2,quantile,c(0.025,0.5,0.975)))
costYoY = costYoY/1e6
costYoY = cbind(factor(1:timehorizon),as.data.frame(costYoY))
colnames(costYoY) = c("Year","","Costs","")
pdf("texdoc/costYoY.pdf",height,width=width_small)
ggplot(costYoY,aes(x=Year,y=Costs, group=1)) +
xlab("Year") + ylab("Costs YoY (millions)") +
geom_ribbon(aes(ymin = costYoY[,2], ymax = costYoY[,4]), fill = "pink",alpha=0.75) +
geom_point(color = "black", size = .5) +
scale_y_continuous(labels=scales::dollar_format()) +
geom_line(aes(y = costYoY$Costs)) +
geom_text(size=3.01,hjust = 0, nudge_x = -.45,vjust = 0, nudge_y = 0.1,aes(label = dollar(Costs))) + geom_hline(yintercept=0,linetype=2,color="darkred") + ylim(0,3)
dev.off()
## PROFITS ##################################
## Profit/loss trajectory
#first, combine the realizations of both variables
profit_byyear_all = matrix(unlist(allrev$revenue),ncol=timehorizon,byrow=TRUE) - matrix(unlist(allcost$cost),ncol=timehorizon,byrow=TRUE)
cumprofit_byyear_all = t(apply(profit_byyear_all,1,cumsum))
#second, find quantiles
profit_byyear = t(apply(profit_byyear_all,2,quantile,c(0.025,0.5,0.975)))
profit_byyear = profit_byyear/1e6
profit_byyear = cbind(factor(1:timehorizon),as.data.frame(profit_byyear))
colnames(profit_byyear) = c("Year","","Profit","")
#second, find quantiles (cum profit)
cumprofit_byyear = t(apply(cumprofit_byyear_all,2,quantile,c(0.025,0.5,0.975)))
cumprofit_byyear = cumprofit_byyear/1e6
cumprofit_byyear = cbind(factor(1:timehorizon),as.data.frame(cumprofit_byyear))
colnames(cumprofit_byyear) = c("Year","","Cumulative profit","")
# plot
pdf("texdoc/profitYoY.pdf",height=height,width=width)
ggplot(profit_byyear,aes(x=Year,y=`Profit`, group=1)) +
xlab("Year") + ylab("Profit YoY (millions)") +
geom_ribbon(aes(ymin = profit_byyear[,2], ymax = profit_byyear[,4]), fill = "lightgreen") +
geom_point(color = "black", size = .5) +
scale_y_continuous(labels=scales::dollar_format()) +
geom_line(aes(y = profit_byyear$`Profit`)) +
geom_text(size=3.01,hjust = 0, nudge_x = -.45,vjust = 0, nudge_y = 0.1,aes(label = dollar(`Profit`)))+ geom_hline(yintercept=0,linetype=2,color="darkred")
dev.off()
# plot (cum)
pdf("texdoc/cumprofit.pdf",height=height,width=width)
ggplot(cumprofit_byyear,aes(x=Year,y=`Cumulative profit`, group=1)) +
xlab("Year") + ylab("Cumulative profit (millions)") +
geom_ribbon(aes(ymin = cumprofit_byyear[,2], ymax = cumprofit_byyear[,4]), fill = "lightblue",alpha=0.8) +
geom_point(color = "black", size = .5) +
scale_y_continuous(labels=scales::dollar_format()) +
geom_line(aes(y = cumprofit_byyear$`Cumulative profit`)) +
geom_text(size=3.01,hjust = 0, nudge_x = -.45,vjust = 0, nudge_y = 0.1,aes(label = dollar(`Cumulative profit`)))+ geom_hline(yintercept=0,linetype=2,color="darkred")
dev.off()
hist(rnorm(10000))
hist(rnorm(10000),prob=T)
hist(rnorm(10000,10,10),prob=T)
hist(rnorm(10000,1,.001),prob=T)
# The Lab projections
library(mosaic)
library(tidyverse)
library(ggplot2)
library(scales)
timehorizon = 10
revenue = rep(NA,timehorizon)
cost = rep(NA,timehorizon)
# plot dimensions (global)
height = 4.5
width_small = 4.5
width = 7.5
## REVENUE ##################################
# revenue side first
# first 2 years, no tuition
allrev = do(1000)*{
tuition = c(0,0,rep(50000,8))
numstudents = rbinom(1,67,0.75)
revenue = tuition*numstudents
revenuecum = cumsum(revenue)
list(revenue=revenue,revenuecum=revenuecum)
}
revup = t(apply(matrix(unlist(allrev$revenuecum),ncol=timehorizon,byrow=TRUE),2,quantile,c(0.025,0.5,0.975)))
revup = revup/1e6
revup = cbind(factor(1:timehorizon),as.data.frame(revup))
colnames(revup) = c("Year","","Revenue","")
pdf(file = "texdoc/cumrev.pdf",height,width)
ggplot(revup,aes(x=Year,y=Revenue, group=1)) +
xlab("Year") + ylab("Cumulative revenue (millions)") +
geom_ribbon(aes(ymin = revup[,2], ymax = revup[,4]), fill = "grey75",alpha=0.75) +
geom_point(color = "black", size = .5) +
scale_y_continuous(labels=scales::dollar_format()) +
geom_line(aes(y = revup$Revenue)) +
geom_text(size=3.01,hjust = 0, nudge_x = -.45,vjust = 0, nudge_y = 0.1,aes(label = dollar(Revenue)))
dev.off()
# Revenue year over year
revYoY = matrix(unlist(allrev$revenue),ncol=timehorizon,byrow=TRUE)
revYoY = t(apply(revYoY,2,quantile,c(0.025,0.5,0.975)))
revYoY = revYoY/1e6
revYoY = cbind(factor(1:timehorizon),as.data.frame(revYoY))
colnames(revYoY) = c("Year","","Revenue","")
pdf("texdoc/revYoY.pdf",height,width=width_small)
ggplot(revYoY,aes(x=Year,y=Revenue, group=1)) +
xlab("Year") + ylab("Revenue YoY (millions)") +
geom_ribbon(aes(ymin = revYoY[,2], ymax = revYoY[,4]), fill = "grey75",alpha=0.75) +
geom_point(color = "black", size = .5) +
scale_y_continuous(labels=scales::dollar_format()) +
geom_line(aes(y = revYoY$Revenue)) +
geom_text(size=3.01,hjust = 0, nudge_x = -.45,vjust = 0, nudge_y = 0.1,aes(label = dollar(Revenue))) + geom_hline(yintercept=0,linetype=2,color="darkred") + ylim(0,3)
dev.off()
## COSTS ##################################
## costs
# legal & marketing & initial real estate expenses, ongoing real estate expenses
realestate_sample = 12*c(34198,26989,21222,25837,26536,30377,23400,28872,31048,17270)
re_mu = mean(realestate_sample)
re_sd = sd(realestate_sample)
allcost = do(1000)*{
realestate = rnorm(10,mean=re_mu,re_sd)
realestate[1] = realestate[1] + rnorm(1,mean=500000,sd=50000) # fixed cost to build out location
legal = rnorm(10,mean=60000,sd=5000)
marketing = rnorm(10,mean=20000,sd=5000)
compute = rnorm(10,mean=60000,sd=10000)
compute[c(1,6)] = compute[c(1,6)] + rnorm(2,mean=100000,sd=5000)
comp_operators = rep(500000,10)
comp_faculty = rep(50000*12,10)
comp_staff = rep(100000,10)
cost = realestate + legal + marketing + compute + comp_operators + comp_faculty + comp_staff
# time uncertainty
cost_baseline = mean(cost)
noise = cost_baseline/30
time_noise = c()
for(ii in 1:timehorizon){
time_noise = c(time_noise,rnorm(1,0,sd=sqrt(ii)*noise))
}
# time_noise=0
cost = cost + time_noise
costcum = cumsum(cost)
list(cost=cost,costcum=costcum)
}
costup = t(apply(matrix(unlist(allcost$costcum),ncol=timehorizon,byrow=TRUE),2,quantile,c(0.025,0.5,0.975)))
costup = costup/1e6
costup = cbind(factor(1:timehorizon),as.data.frame(costup))
colnames(costup) = c("Year","","Costs","")
pdf("texdoc/cumcost.pdf",height,width)
ggplot(costup,aes(x=Year,y=Costs, group=1)) +
xlab("Year") + ylab("Cumulative costs (millions)") +
geom_ribbon(aes(ymin = costup[,2], ymax = costup[,4]), fill = "pink") +
geom_point(color = "black", size = .5) +
scale_y_continuous(labels=scales::dollar_format()) +
geom_line(aes(y = costup$Costs)) +
geom_text(size=3.01,hjust = 0, nudge_x = -.45,vjust = 0, nudge_y = 0.1,aes(label = dollar(Costs)))+ geom_hline(yintercept=0,linetype=2,color="darkred")
dev.off()
# Costs year over year
costYoY = matrix(unlist(allcost$cost),ncol=timehorizon,byrow=TRUE)
costYoY = t(apply(costYoY,2,quantile,c(0.025,0.5,0.975)))
costYoY = costYoY/1e6
costYoY = cbind(factor(1:timehorizon),as.data.frame(costYoY))
colnames(costYoY) = c("Year","","Costs","")
pdf("texdoc/costYoY.pdf",height,width=width_small)
ggplot(costYoY,aes(x=Year,y=Costs, group=1)) +
xlab("Year") + ylab("Costs YoY (millions)") +
geom_ribbon(aes(ymin = costYoY[,2], ymax = costYoY[,4]), fill = "pink",alpha=0.75) +
geom_point(color = "black", size = .5) +
scale_y_continuous(labels=scales::dollar_format()) +
geom_line(aes(y = costYoY$Costs)) +
geom_text(size=3.01,hjust = 0, nudge_x = -.45,vjust = 0, nudge_y = 0.1,aes(label = dollar(Costs))) + geom_hline(yintercept=0,linetype=2,color="darkred") + ylim(0,3)
dev.off()
## PROFITS ##################################
## Profit/loss trajectory
#first, combine the realizations of both variables
profit_byyear_all = matrix(unlist(allrev$revenue),ncol=timehorizon,byrow=TRUE) - matrix(unlist(allcost$cost),ncol=timehorizon,byrow=TRUE)
cumprofit_byyear_all = t(apply(profit_byyear_all,1,cumsum))
#second, find quantiles
profit_byyear = t(apply(profit_byyear_all,2,quantile,c(0.025,0.5,0.975)))
profit_byyear = profit_byyear/1e6
profit_byyear = cbind(factor(1:timehorizon),as.data.frame(profit_byyear))
colnames(profit_byyear) = c("Year","","Profit","")
#second, find quantiles (cum profit)
cumprofit_byyear = t(apply(cumprofit_byyear_all,2,quantile,c(0.025,0.5,0.975)))
cumprofit_byyear = cumprofit_byyear/1e6
cumprofit_byyear = cbind(factor(1:timehorizon),as.data.frame(cumprofit_byyear))
colnames(cumprofit_byyear) = c("Year","","Cumulative profit","")
# plot
pdf("texdoc/profitYoY.pdf",height=height,width=width)
ggplot(profit_byyear,aes(x=Year,y=`Profit`, group=1)) +
xlab("Year") + ylab("Profit YoY (millions)") +
geom_ribbon(aes(ymin = profit_byyear[,2], ymax = profit_byyear[,4]), fill = "lightgreen") +
geom_point(color = "black", size = .5) +
scale_y_continuous(labels=scales::dollar_format()) +
geom_line(aes(y = profit_byyear$`Profit`)) +
geom_text(size=3.01,hjust = 0, nudge_x = -.45,vjust = 0, nudge_y = 0.1,aes(label = dollar(`Profit`)))+ geom_hline(yintercept=0,linetype=2,color="darkred")
dev.off()
# plot (cum)
pdf("texdoc/cumprofit.pdf",height=height,width=width)
ggplot(cumprofit_byyear,aes(x=Year,y=`Cumulative profit`, group=1)) +
xlab("Year") + ylab("Cumulative profit (millions)") +
geom_ribbon(aes(ymin = cumprofit_byyear[,2], ymax = cumprofit_byyear[,4]), fill = "lightblue",alpha=0.8) +
geom_point(color = "black", size = .5) +
scale_y_continuous(labels=scales::dollar_format()) +
geom_line(aes(y = cumprofit_byyear$`Cumulative profit`)) +
geom_text(size=3.01,hjust = 0, nudge_x = -.45,vjust = 0, nudge_y = 0.1,aes(label = dollar(`Cumulative profit`)))+ geom_hline(yintercept=0,linetype=2,color="darkred")
dev.off()
# Simulate lots of games according to these Poissons
NMC = 1000
UT = rpois(NMC, 1.6)
Tech = rpois(NMC, 1.3)
# Compile the results
xtabs(~UT + Tech)
results_table = xtabs(~UT + Tech)/NMC
results_table
setwd("~/Dropbox/SalemCenter/classes/IntroML-MSBAWP/MachineLearning_MSBA-WP/code")
P = 0.09
N = 140
k_grid = seq(0, 30, by=1)
k_grid
dbinom(k_grid, N, P)
barplot(dbinom(k_grid, N, P), names.arg = k_grid,
xlab='Number of no shows',
ylab='Probability')
sum(dbinom(0:5, N, P))
sum(dbinom(12:140, N, P)) # this is the answer to our question on the slides!
1 - pbinom(11, size=N, prob=P) # using the cumulative distribution
1 - pbinom(11, size=N, prob=P) # using the cumulative distribution function instead, this line of code is 1-P(X<=11)
x_grid = 0:7
x_grid
dpois(x_grid, 1.6)
barplot(dpois(x_grid, 1.6), names.arg = x_grid,
cex.names=1.1, las=1, ylim=c(0,0.35),
xlab='Goals',
ylab='Probability', main="UT: Poisson(1.6)")
barplot(dpois(x_grid, 1.3), names.arg = x_grid,
cex.names=1.1, las=1, ylim=c(0,0.35),
xlab='Goals',
ylab='Probability', main="Texas Tech: Poisson(1.3)")
NMC = 1000
UT = rpois(NMC, 1.6)
Tech = rpois(NMC, 1.3)
# Simulate lots of games according to these Poissons
NMC = 1000
UT = rpois(NMC, 1.6)
Tech = rpois(NMC, 1.3)
UT
Tech
xtabs(~UT + Tech)
results_table = xtabs(~UT + Tech)/NMC
results_table
sum(UT > Tech)/NMC
sum(UT == Tech)/NMC
sum(UT < Tech)/NMC
dpois(1, 1.6) * dpois(1, 1.3)
dpois(2, 1.6) * dpois(0, 1.3) # UT 2 - 0 Texas Tech
my_cols = grey(seq(1, 0.5, length=15))
my_breaks = seq(0, 0.12, length=16)
image(0:5, 0:5, results_table[1:5,1:5],
xlim=c(-0.5, 5.5),
ylim=c(-0.5, 5.5),
col=my_cols, breaks=my_breaks,
las=1, bty='n',
main="Probability of outcomes for the \nUT vs. Texas Tech match",
ylab='UT goals',
xlab="Texas Tech goals")
abline(h=-0.5 + 0:6, lty='dotted')
abline(v=-0.5 + 0:6, lty='dotted')
for(i in 1:6) {
for(j in 1:6) {
text(i-1, j-1, results_table[i,j])
if(i > j) {
rect(i-1.5,j-1.5,i-0.5, j-0.5, border='blue', lwd=2)
}
}
}
##### needed packages:
library(tidyverse)
library(mosaic)
nycflights13 <- read.csv('../data/nycflights13.csv')
##### summarize variables  #####
nycflights13 %>%
summarize(mean_dep_delay = mean(dep_delay))
# Why NA? because 8255 flights have missing (NA) values
nycflights13 %>%
summarize(mosaic::favstats(dep_delay))
# we can add na.rm=TRUE to summaries to ignore these missing values
nycflights13 %>%
summarize(mean_dep_delay = mean(dep_delay, na.rm=TRUE))
##### Grouping by more than one variable #####
by_origin_monthly = nycflights13 %>%
group_by(origin, month) %>%
summarize(count = n(),
mean_dep_delay = mean(dep_delay, na.rm=TRUE))
by_origin_monthly
# now let's make a bar plot
# factor tells R to treat month as a categorical variable,
# even though it's labeled with numbers
ggplot(by_origin_monthly) +
geom_col(aes(x=factor(month), y=mean_dep_delay)) +
facet_wrap(~origin)
# all three airports worst in summer and winter holidays,
# best in the fall
#####  mutate existing variables  #####
# create 'gain' variable from two existing variables
# gain is positively for each minute plane is late departing, and negatively related to each minute plane is late arriving.
nycflights13 = nycflights13 %>%
mutate(gain = dep_delay - arr_delay)
# Histogram of gain variable
ggplot(nycflights13) +
geom_histogram(aes(x = gain), binwidth=5)
# which routes from NYC gained the most time in the air, on average?
# need na.rm=TRUE because of missing values
nycflights13 %>%
group_by(dest) %>%
summarize(mean_gain = mean(gain, na.rm=TRUE)) %>%
arrange(desc(mean_gain))
# create multiple new variables at once in the same mutate()
# within same mutate() code we can refer to new variables just created
nycflights13 = nycflights13 %>%
mutate(
gain = dep_delay - arr_delay,
hours = air_time / 60,
gain_per_hour = gain / hours
)
# now which routes gained the most per hour?
nycflights13 %>%
group_by(dest) %>%
summarize(mean_gain_per_hour = mean(gain_per_hour, na.rm=TRUE)) %>%
arrange(desc(mean_gain_per_hour))
